variable "project_id" {
  description = "The GCP project ID in which to deploy the VPC and its subnets."
  type        = string
}
variable "environment" {
  description = "The lifecycle of this project.  Valid values are: dev, qa, cert-ncde (non-cde), prod-ncde (non-cde), cert-cde, prod-cde, or svcs (shared services)."
  type        = string
}

variable "name" {
  description = "Name of the VPC to be created. Should contain lowercase letters, numbers, and dashes only."
  type        = string
}

variable "subnet_regions" {
  description = "List of regions in which to create subnets within the VPC, using a predefined subnet structure.  Specify this or vpc_custom_subnets, otherwise no subnets will be created."
  type        = list(string)
  default     = []
}

/*
variable "vpc_custom_subnets" {
  description = "List of maps of subnet configurations.  This supercedes any subnet configurations generated by the module, all subnet options must be explicitly specified.  Specify this or vpc_prescribed_subnet_regions, otherwise no subnets will be created."
  type        = list(map(string))
  default     = []
}
*/

variable "secondary_ranges" {
  description = "Map of subnets listing maps of secondary ranges"
  type = map(list(object({
    range_name    = string
    ip_cidr_range = string
  })))
  default = {}
}

variable "routes" {
  description = "List of routes represented as map."
  type        = list(map(string))
  default     = []
}

variable "enable_private_access_routing" {
  description = "Enable whether special routes are automatically added to enable private access."
  type        = bool
  default     = true
}

variable "subnet_flow_logs" {
  description = "Configure flow log capture parameters for all subnets."
  type = object({
    subnet_flow_logs          = string # "true" to enable flow logs
    subnet_flow_logs_interval = string # Aggregation interval
    subnet_flow_logs_sampling = string # Sample rate of VPC flow logs
    subnet_flow_logs_metadata = string # Metadata to be included
  })

  default = {
    subnet_flow_logs          = "true",
    subnet_flow_logs_interval = "INTERVAL_5_SEC",
    subnet_flow_logs_sampling = "0.5"
    subnet_flow_logs_metadata = "INCLUDE_ALL_METADATA"
  }
}

variable "create_nat" {
  description = "Boolean indicating whether Cloud Nat should be configured. This will include a cloud router, one or more external static IP addresses, and cloud NAT resources."
  type        = bool
  default     = false
}

variable "number_nat_addresses" {
  description = "The number of external static IP addresses to configure for Cloud NAT."
  type        = number
  default     = 1
}

variable "existing_nat_addresses" {
  description = "List of google_compute_address resource selflinks for the reserved IP addresses to use for Cloud NAT.  This overrides number_nat_addresses and no new IPs would be reserved."
  type        = list(string)
  default     = []
}

variable "private_access_dns_entries" {
  description = "Create Cloud DNS entries, by defining entries in key-value format. Key being domain name and value being the subdomain name. This is required when enable_private_access_routing is true."
  type        = map(string)
  default = {
    "googleapis.com" = "private.googleapis.com",
    "gcr.io"         = "gcr.io",
    "appspot.com"    = "appspot.com",
    "cloudproxy.app" = "tunnel.cloudproxy.app",
    "run.app"        = "run.app"
  }
}
